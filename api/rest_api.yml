openapi: 3.0.3
info:
  title: Социальная сеть путешественников
  description: Это API социальной сети для курса по System Design
  version: 1.0.0
tags:
  - name: accounts
    description: Методы, связанные с аккаунтами
  - name: subscriptions
    description: Методы, связанные с подписками
  - name: chats
    description: Методы, связанные с чатами
  - name: posts
    description: Методы, связанные с постами путешествий
  - name: marks
    description: Методы, связанные с получением оценок путешествий
  - name: comments
    description: Методы, связанные с комментариями к путешествием
  - name: feeds
    description: Методы, связанные с лентой путешествий
  - name: places
    description: Методы, связанные с местами путешествий
  - name: images
    description: Методы, связанные с работой с изображениями
paths:
  /api/v1/accounts:
    post:
      tags:
        - accounts
      summary: Создает аккаунт
      description: Создает аккаунт человека
      requestBody:
        description: Данные для создания аккаунта
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreate'
      responses:
        '200':
          description: Аккаунт создан
        '400':
          description: Неправильный запрос на создание аккаунта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
    put:
      tags:
        - accounts
      summary: Обновляет аккаунт
      description: Обновляет аккаунт человека
      requestBody:
        description: Данные для обновления аккаунта
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdate'
      security:
        - Bearer: []
      responses:
        '200':
          description: Аккаунт обновлен
        '400':
          description: Неправильный запрос на обновление аккаунта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
    delete:
      tags:
        - accounts
      summary: Удаляет аккаунт
      description: Удаляет аккаунт пользователя
      security:
        - Bearer: []
      responses:
        '200':
          description: Аккаунт удален
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/accounts/{accountID}:
    get:
      tags:
        - accounts
      summary: Получает аккаунт по ID
      description: Получает аккаунт по ID
      parameters:
        - in: path
          name: accountID
          required: true
          schema:
            type: string
          description: ID аккаунта для чтения
      security:
        - Bearer: []
      responses:
        '200':
          description: Аккаунт найден и возвращен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRead'
        '400':
          description: Неправильный запрос на получение аккаунта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Аккаунт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/subscriptions/{accountID}:
    post:  
      tags:
        - subscriptions
      summary: Создает подписку
      description: Создает для текущего пользователя подписку на accountID
      parameters:
        - in: path
          name: accountID
          required: true
          schema:
            type: string
          description: ID аккаунта для подписки
      security:
        - Bearer: []
      responses:
        '200':
          description: Подписка создана
        '404':
          description: Аккаунт для подписки не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
    delete:  
      tags:
        - subscriptions
      summary: Удаляет подписку
      description: Удаляет для текущего пользователя подписку на accountID
      parameters:
        - in: path
          name: accountID
          required: true
          schema:
            type: string
          description: ID аккаунта для удаления подписки на него
      security:
        - Bearer: []
      responses:
        '200':
          description: Подписка удалена
        '404':
          description: Аккаунт для удаления подписки не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/subscriptions:
    get:  
      tags:
        - subscriptions
      parameters:
        - name: limit
          in: query
          description: Максимальное количество объектов в ответе
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          description: Смещение от начала списка объектов
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      summary: Получает подписки текущего пользователя
      description: Возвращает список подписок для текущего пользователя
      security:
        - Bearer: []
      responses:
        '200':
          description: Подписки возвращены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountRead'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/chats:
    post:
      tags:
        - chats
      summary: Создает чат с аккаунтами по их ID
      description: Создает чат с аккаунтом по ID
      requestBody:
        description: Список accountID для создания чата
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCreate'
              
      security:
        - Bearer: []
      responses:
        '200':
          description: Чат создан
        '400':
          description: Неправильный запрос на создание чата
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Аккаунт для создания чата не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
    get:
      tags:
        - chats
      summary: Получает все чаты
      description: Получает все чаты для текущего аккаунта
      parameters:
        - name: limit
          in: query
          description: Максимальное количество объектов в ответе
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          description: Смещение от начала списка объектов
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      security:
        - Bearer: []
      responses:
        '200':
          description: Чати найдены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: "id чатов"
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/chats/{chatID}:
    get:
      tags:
        - chats
      summary: Получает чат по его ID
      description: Получает чат по его ID
      parameters:
        - in: path
          name: chatID
          required: true
          schema:
            type: string
          description: ID чата
        - name: limit
          in: query
          description: Максимальное количество сообщений в чате в ответе
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          description: Смещение от начала списка сообщений в чате
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      security:
        - Bearer: []
      responses:
        '200':
          description: Чат получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatRead'
        '400':
          description: Неправильный запрос на получение чата
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Чат не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
    delete:
      tags:
        - chats
      summary: Удаляет чат по ID
      description: Удаляет чат по ID
      parameters:
        - in: path
          name: chatID
          required: true
          schema:
            type: string
          description: ID для удаления чата
      security:
        - Bearer: []
      responses:
        '200':
          description: Чат удален
        '400':
          description: Неправильный запрос на удаление чата
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Чат с аккаунтом не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/chats/{chatID}/messages:
    post:
      tags:
        - chats
      summary: Посылка сообщения
      description: Посылает сообщение пользователю с аккаутом ID
      parameters:
        - in: path
          name: chatID
          required: true
          schema:
            type: string
          description: ID чата для отправки сообщения
      requestBody:
        description: Данные для посылки сообщения
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageCreate'
      security:
        - Bearer: []
      responses:
        '200':
          description: Сообщение послано
        '400':
          description: Неправильный запрос на посылку сообшения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Аккаунт для посылки сообщения не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/posts:
    post:
      tags:
        - posts
      summary: Создает путешествие
      description: Создает путешествие
      security:
        - Bearer: []
      requestBody:
        description: Данные для создания путешествия
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Путешествие создан
        '400':
          description: Неправильный запрос на создание путешествия
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/posts/{postID}:
    put:
      tags:
        - posts
      summary: Обновляет путешествиe
      description: Создает путешествиe
      parameters:
        - in: path
          name: postID
          required: true
          schema:
            type: string
          description: ID путешествия для обновления 
      security:
        - Bearer: []
      requestBody:
        description: Данные для обновления путешествия
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Путешествие создан
        '400':
          description: Неправильный запрос на обновление путешествия
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
    delete:
      tags:
        - posts
      summary: Удаляет путешествие
      description: Удаляет путешествие
      parameters:
        - in: path
          name: postID
          required: true
          schema:
            type: string
          description: ID путешествия для удаления 
      security:
        - Bearer: []
      responses:
        '200':
          description: Путешествие удален
        '404':
          description: Путешествие для удаления не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
    get: 
      tags:
        - posts
      summary: Получает путешествие
      description: Получение путешествия по его ID
      security:
        - Bearer: []
      parameters:
        - in: path
          name: postID
          required: true
          schema:
            type: string
          description: ID путешествия для получения
      responses:
        '200':
          description: Путешествие получено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRead'
        '404':
          description: Путешествие не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/posts/{accountID}:
    get: 
      tags:
        - posts
      summary: Получает путешествия пользователя
      description: Получение всех путешествий пользователя по его ID
      security:
        - Bearer: []
      parameters:
        - in: path
          name: accountID
          required: true
          schema:
            type: string
          description: ID пользователя для получения его путешествий
        - name: filterType
          in: query
          description: Тип сортировки путешествий при необходимости
          required: false
          schema:
            type: string
            enum:
              - by_time
              - by_mark
        - name: limit
          in: query
          description: Максимальное количество объектов в ответе
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          description: Смещение от начала списка объектов
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Путешествия получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostRead'
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/posts/{postID}/mark:
    post:
      tags:
        - marks
      summary: Создает оценку на путешествие
      description: Создает оценку на путешествие
      security:
        - Bearer: []
      parameters:
        - in: path
          name: postID
          required: true
          schema:
            type: string
          description: ID путешествия для оценки 
      responses:
        '200':
          description: Оценка на путешествие создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mark'
        '404':
          description: Путешествие не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/posts/{postID}/marks/{markID}:
    put:
      tags:
        - marks
      summary: Обновляет оценку на путешествие
      description: Обновляет оценку на путешествие
      security:
        - Bearer: []
      parameters:
        - in: path
          name: postID
          required: true
          schema:
            type: string
          description: ID путешествия для обновления оценки 
        - in: path
          name: markID
          required: true
          schema:
            type: string
          description: ID оценки 
      responses:
        '200':
          description: Оценка на путешествие обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mark'
        '404':
          description: Путешествие не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
    delete:
      tags:
        - marks
      summary: Удаляет оценку с путешествия
      description: Удаляет оценку с путешествия
      security:
        - Bearer: []
      parameters:
        - in: path
          name: postID
          required: true
          schema:
            type: string
          description: ID путешествия для лайка 
        - in: path
          name: markID
          required: true
          schema:
            type: string
          description: ID оценки 
      responses:
        '200':
          description: Оценка на путешествие удалена
        '404':
          description: Путешествие не найдено или оценки на путешествии нет
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/posts/{postID}/comment:
    post:
      tags:
        - comments
      summary: Создает комментарий к путешествию
      description: Создает комментарий к путешествию
      security:
        - Bearer: []
      parameters:
        - in: path
          name: postID
          required: true
          schema:
            type: string
          description: ID путешествия для комментария 
      requestBody:
        description: Данные для создания комментария
        required: true
        content:
          application/json:
           schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Комментарий на путешествие создан
        '404':
          description: Путешествие не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/posts/{postID}/comment/{commentID}:
    put:
      tags:
        - comments
      summary: Обновляет комментарий к путешествию
      description: Обновляет комментарий к путешествию
      security:
        - Bearer: []
      parameters:
        - in: path
          name: postID
          required: true
          schema:
            type: string
          description: ID путешествия для обновления комментария 
        - in: path
          name: commentID
          required: true
          schema:
            type: string
          description: ID комментария
      requestBody:
        description: Данные для обновления комментария
        required: true
        content:
          application/json:
           schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Комментарий на путешествие обновлен
        '404':
          description: Путешествие не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
    delete:
      tags:
        - comments
      summary: Удаляет комментарий от путешествия
      description: Удаляет комментарий от путешествия
      security:
        - Bearer: []
      parameters:
        - in: path
          name: postID
          required: true
          schema:
            type: string
          description: ID путешествия для комментария 
        - in: path
          name: commentID
          required: true
          schema:
            type: string
          description: ID комментария 
      responses:
        '200':
          description: Комментарий на путешествие удален
        '404':
          description: Путешествие не найдено или комментария к путешествию нет
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/posts/{postID}/comments:
    get:
      tags:
        - comments
      summary: Получает комментарии к путешествию
      description: Получает комментарии к путешествию
      security:
        - Bearer: []
      parameters:
        - in: path
          name: postID
          required: true
          schema:
            type: string
          description: ID путешествия для получения комментариев
        - name: limit
          in: query
          description: Максимальное количество объектов в ответе
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          description: Смещение от начала списка объектов
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Комментарии получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentRead'
        '404':
          description: Путешествие не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/feeds:
    get: 
      tags:
        - feeds
      summary: Получает путешествия подписок/лучшие за период среди всех 
      description: Получает путешествия подписок/лучшие за период среди всех 
      security:
        - Bearer: []
      parameters:
        - name: interval
          in: query
          required: true
          schema:
            type: string
            enum:
              - day
              - week
              - all
          description: интервал для сбора путешествий
        - name: type
          in: query
          required: true
          description: Тип путешествий для отображения в ленте
          schema:
            type: string
            enum:
              - subscriptions
              - best_posts
        - name: limit
          in: query
          description: Максимальное количество объектов в ответе
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          description: Смещение от начала списка объектов
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Путешествия получены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostRead'
        '400':
          description: Ошибка в запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса
  /api/v1/places:
    get: 
      tags:
        - places
      summary: Получает оценок мест путешествий 
      description: Получает оценки мест путешествий 
      security:
        - Bearer: []
      parameters:
        - name: interval
          in: query
          required: true
          schema:
            type: string
            enum:
              - day
              - week
              - all
          description: интервал для сбора оценок мест путешествий
        - name: city
          in: query
          description: Имя города
          required: false
          schema:
            type: string
        - name: region
          in: query
          description: Имя региона
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: Имя страны
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Максимальное количество объектов в ответе
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          description: Смещение от начала списка объектов
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Оценка мест путешествий получена
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Places'
        '400':
          description: Ошибка в запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервиса 
  /api/v1/map-travels:
    get:
      tags:
        - places
      summary: Получить координаты мест путешествий на карте
      security:
        - Bearer: []
      parameters:
        - name: startDate
          in: query
          description: Начальная дата для фильтрации по времени путешествия
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Конечная дата для фильтрации по времени путешествия
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Места путешествий успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    location:
                      type: string
                    coordinates:
                      type: object
                      properties:
                        latitude:
                          type: number
                        longitude:
                          type: number
        '400':
          description: Неправильный запрос на получение мест путешествий
        '500':
          description: Внутренняя ошибка сервера
  /api/v1/images:
    post:
      tags:
        - images
      summary: Загружает изображение на статику
      description: Загружает изображение на статику
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Изображение успешно загружено
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: url
                    description: URL, по которому можно получить загруженное изображение
        '400':
          description: Неверный запрос или формат изображения
        '500':
          description: Внутренняя ошибка сервера
  /api/v1/images/{imageID}:
    delete:
      tags:
        - images
      summary: Удаляет изображение со статики
      description: Удаляет изображение со статики
      security:
        - Bearer: []
      parameters:
        - in: path
          name: imageID
          required: true
          schema:
            type: string
          description: ID изображения для удаления 
      responses:
        '200':
          description: Изображение успешно удалено
        '400':
          description: Неверный запрос или формат изображения
        '500':
          description: Внутренняя ошибка сервера
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
  schemas:
    AccountCreate:
      type: object
      properties:
        name:
          type: string
        country:
          type: string
        city:
          type: string
        email:
          type: string
        password:
          type: string
    AccountRead:
      type: object
      properties:
        account_id:
          type: string
        name:
          type: string
        country:
          type: string
        city:
          type: string
    AccountUpdate:
      type: object
      properties:
        account_id:
          type: string
        name:
          type: string
        country:
          type: string
        city:
          type: string
        email:
          type: string
        password:
          type: string
    MessageCreate:
      type: object
      properties:
        account_id:
          type: string
        text:
          type: string
    ChatCreate:
      type: object
      properties:
        accountIDs:
          type: array
          items: 
            type: string
        name:
          type: string
    ChatRead:
      type: object
      properties:
        accountIDs:
          type: array
          items: 
            type: string
        name:
          type: string
        messages:
          type: array
          items: 
            $ref: '#/components/schemas/MessageChatRead'
    MessageChatRead:
      type: object
      properties:
        author:
          type: string
        text:
          type: string
        date:
          type: string
          format: date
    MessageRead:
      type: object
      properties:
        text:
          type: string
        date:
          type: string
          format: date
    Post:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        coordinates:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
          required:
            - latitude
            - longitude
        is_private:
          type: boolean
        images:
          type: array
          description: 'url изображений'
          items:
            type: string
        country:
          type: string
        city:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
    PostRead:
      type: object
      properties:
        account_id:
          type: string
        post_id:
          type: string
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        coordinates:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
          required:
            - latitude
            - longitude
        marks:
          type: array
          items: 
            $ref: '#/components/schemas/Mark'
        is_private:
          type: boolean
        images:
          type: array
          description: 'url изображений'
          items:
            type: string
        country:
          type: string
        city:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
    
    Mark:
      type: object
      properties:
        mark:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
    Comment:
      type: object
      properties:
        text: 
          type: string
    CommentRead:
      type: object
      properties:
        account_id:
          type: integer
        text: 
          type: string
        create_time:
          type: string
          format: date
    Places:
      type: object
      properties:
        name:
          type: string
        city:
          type: string
        region:
          type: string
        country:
          type: string
        median_mark: 
          type: number
        posts_cnt: 
          type: number
    Error:
      type: object
      properties:
        error:
          type: string
          description: Описание ошибки
